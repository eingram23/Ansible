---
- hosts: pihole.local.lan,!splunk.local.lan
  remote_user: eingram
  become: yes
  become_method: sudo

  tasks:
    - when: ansible_facts['distribution'] != 'CentOS'
      block:    
        - name: Copy the Splunk Forwarder installer to remote Servers (Non CentOS)
          copy:
            src: /home/eingram/ansible/packages/splunkforwarder-8.2.2-87344edfcdb4-linux-2.6-amd64.deb
            dest: /home/eingram
            owner: eingram
            group: eingram
            mode: 0644

        - name: Install Splunk Forwarder package on remote servers (Non CentOS)
          apt:
            deb: /home/eingram/splunkforwarder-8.2.2-87344edfcdb4-linux-2.6-amd64.deb

    - when: ansible_facts['distribution'] == 'CentOS'
      block:      
        - name: Copy the Splunk Forwarder installer to remote Servers (CentOS)
          copy:
            src: /home/eingram/ansible/packages/splunkforwarder-8.2.2-87344edfcdb4-linux-2.6-x86_64.rpm
            dest: /home/eingram
            owner: eingram
            group: eingram
            mode: 0644

        - name: Install Splunk Forwarder package on remote servers (CentOS)
          yum:
            name: /home/eingram/splunkforwarder-8.2.2-87344edfcdb4-linux-2.6-x86_64.rpm
            state: present

    - name: Create splunk user and group if not already exist.
      action: user name=splunk group=splunk state=present

    - name: Copy the Splunk Forwarder config from your centralized server to remote servers.
      copy: 
        src: "{{ item.src }}" 
        dest: "{{ item.dest }}"
        owner: splunk
        group: splunk
        mode: 0600
      with_items:
       - { src: '/home/eingram/ansible/configs/splunk/inputs.conf', dest: '/opt/splunkforwarder/etc/system/local/inputs.conf' }
       - { src: '/home/eingram/ansible/configs/splunk/outputs.conf', dest: '/opt/splunkforwarder/etc/system/local/outputs.conf' }

    - name: Start Splunk forwarder service.
      remote_user: eingram
      become: yes
      become_method: sudo
      become_user: splunk
      expect:
        command: /opt/splunkforwarder/bin/splunk start --accept-license
        timeout: 60
        responses:
           (.*)Please enter an administrator username(.*): "splunk"
           (.*)Please enter a new password(.*): "NL2B1r13"
           (.*)Please confirm new password(.*): "NL2B1r13"

    - name: Stopping Splunk to enable boot start
      ansible.builtin.shell: /opt/splunkforwarder/bin/splunk stop
      become: true

    - name: Enable Splunk to boot at start
      ansible.builtin.shell: /opt/splunkforwarder/bin/splunk enable boot-start -user splunk -systemd-managed 1
      become: true

    - name: Restarting Splunk
      ansible.builtin.shell: /opt/splunkforwarder/bin/splunk start
      become: true

    - pause: seconds=10

    - name: Check Splunk forwarder service.
      command:
        /opt/splunkforwarder/bin/splunk status
      register: service_splunk_status

    - name: Report Splunk forwarder Status.
      debug:
         var: service_splunk_status.stdout_lines
