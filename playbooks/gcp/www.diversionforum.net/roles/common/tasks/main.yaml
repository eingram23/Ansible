---
- name: Create supporting folder structure
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: eingram
    group: eingram
    mode: 0775
  loop:
    - "{{root}}"
    - /home/eingram/.config/systemd/user

- name: Copy github private key to remote host
  ansible.builtin.copy:
    src: ssh-key-ansible.key
    dest: /home/eingram/.ssh/
    mode: '0600'

- name: Pause playbook until web files are uploaded to host
  pause:
    prompt: "Make sure web file backup is in /home/eingram and renamed to sitebackup.tar.gz"
    
# - name: Clone www.diversionforum.net repo from github
#   git:
#     repo: "{{repo}}{{app}}.git"
#     dest: "{{root}}{{app}}"
#     clone: yes
#     key_file: /home/eingram/.ssh/ssh-key-ansible
#     accept_hostkey: yes
#     update: yes
#     force: yes

- name: Extract web files to html root
  ansible.builtin.unarchive:
    src: /home/eingram/sitebackup.tar.gz
    dest: "{{root}}"
    remote_src: yes
    extra_opts: [--strip-components=2]

- name: Edit Settings.php to replace localhost with 127.0.0.1 for db connection
  ansible.builtin.lineinfile:
    path: "{{root}}{{app}}/public_html/Settings.php"
    search_string: '$db_server = '
    line: $db_server = '127.0.0.1';

- name: Add db password to Settings.php
  ansible.builtin.lineinfile:
    path: "{{root}}{{app}}/public_html/Settings.php"
    search_string: 'changethis'
    line: $db_passwd = '{{mysql_smfprod}}';

- name: Modify html perms to make necessary folders writable
  ansible.builtin.file:
    path: "{{item}}"
    state: directory
    recurse: yes
    mode: '0777'
  loop:
    - "{{root}}{{app}}/public_html/attachments"
    - "{{root}}{{app}}/public_html/avatars"
    - "{{root}}{{app}}/public_html/cache"
    - "{{root}}{{app}}/public_html/Packages"
    - "{{root}}{{app}}/public_html/Smileys"
    - "{{root}}{{app}}/public_html/Themes"

- name: Clone Containers repo from github
  git:    
    repo: "{{repo}}Containers.git"
    dest: "{{root}}Containers"
    key_file: /home/eingram/.ssh/ssh-key-ansible.key
    accept_hostkey: yes
    clone: yes
    update: yes

- name: Build www.diversionforum.net-web image
  containers.podman.podman_image:
    name: "{{app}}-web"
    path: "{{root}}Containers/Projects/{{app}}/{{app}}-web"
    force: yes

- name: Build www.diversionforum.net-php image
  containers.podman.podman_image:
    name: "{{app}}-php"
    path: "{{root}}Containers/Projects/{{app}}/{{app}}-php"
    force: yes

- name: Pause playbook to make sure smfprod sql dump is on remote host
  pause:
    prompt: "Make sure smfprod backup is in /home/eingram and renamed to smfprod.bak.gz"

# - name: Copy sql backup to build Location
#   ansible.builtin.copy:
#     src: smfprod.sql
#     dest: "{{root}}Containers/Projects/{{app}}/{{app}}-db"

- name: Extract smfprod sql backup
  ansible.builtin.shell: gunzip -c /home/eingram/smfprod.bak.gz > {{root}}Containers/Projects/{{app}}/{{app}}-db/smfprod.sql

- name: Build www.diversionforum.net-db image
  containers.podman.podman_image:
    name: "{{app}}-db"
    path: "{{root}}Containers/Projects/{{app}}/{{app}}-db"
    force: yes

- name: Create www.diversionforum.net pod
  containers.podman.podman_pod:
    name: "{{app}}"
    state: started
    publish: "{{nginx_port}}:{{nginx_port}}"

- name: Run www.diversionforum.net-web container
  containers.podman.podman_container:
    name: "{{app}}-web"
    image: localhost/{{app}}-web
    volume: 
      - "{{root}}{{app}}/public_html:/var/www/html:z"
    state: started
    restart_policy: always
    pod: "{{app}}"

- name: Run www.diversionforum.net-php container
  containers.podman.podman_container:
    name: "{{app}}-php"
    image: localhost/{{app}}-php
    volume: 
      - "{{root}}{{app}}/public_html:/var/www/html"
    state: started
    restart_policy: always
    pod: "{{app}}"

- name: Run www.diversionforum.net-db container
  containers.podman.podman_container:
    name: "{{app}}-db"
    image: localhost/{{app}}-db
    env:
      MYSQL_ROOT_PASSWORD: "{{mysql_root}}"
      MYSQL_DATABASE: smfprod
      MYSQL_USER: smfprod
      MYSQL_PASSWORD: "{{mysql_smfprod}}"
    volume: 
      - smfprod-data:/var/lib/mysql
    state: started
    restart_policy: always
    pod: "{{app}}"


    
    